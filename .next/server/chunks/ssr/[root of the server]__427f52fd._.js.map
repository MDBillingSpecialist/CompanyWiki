{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///Users/WoundCentrics/Desktop/Code%20Projects/Work%20Projects/Hippa/company-wiki/src/components/sidebar/Sidebar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Sidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Sidebar() from the server but Sidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/sidebar/Sidebar.tsx <module evaluation>\",\n    \"Sidebar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,oEACA","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///Users/WoundCentrics/Desktop/Code%20Projects/Work%20Projects/Hippa/company-wiki/src/components/sidebar/Sidebar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Sidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Sidebar() from the server but Sidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/sidebar/Sidebar.tsx\",\n    \"Sidebar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,gDACA","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///Users/WoundCentrics/Desktop/Code%20Projects/Work%20Projects/Hippa/company-wiki/src/components/navigation/Breadcrumb.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Breadcrumb = registerClientReference(\n    function() { throw new Error(\"Attempted to call Breadcrumb() from the server but Breadcrumb is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/navigation/Breadcrumb.tsx <module evaluation>\",\n    \"Breadcrumb\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,0EACA","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///Users/WoundCentrics/Desktop/Code%20Projects/Work%20Projects/Hippa/company-wiki/src/components/navigation/Breadcrumb.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Breadcrumb = registerClientReference(\n    function() { throw new Error(\"Attempted to call Breadcrumb() from the server but Breadcrumb is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/navigation/Breadcrumb.tsx\",\n    \"Breadcrumb\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,sDACA","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///Users/WoundCentrics/Desktop/Code%20Projects/Work%20Projects/Hippa/company-wiki/src/components/search/SearchBar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SearchBar = registerClientReference(\n    function() { throw new Error(\"Attempted to call SearchBar() from the server but SearchBar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/search/SearchBar.tsx <module evaluation>\",\n    \"SearchBar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,qEACA","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///Users/WoundCentrics/Desktop/Code%20Projects/Work%20Projects/Hippa/company-wiki/src/components/search/SearchBar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SearchBar = registerClientReference(\n    function() { throw new Error(\"Attempted to call SearchBar() from the server but SearchBar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/search/SearchBar.tsx\",\n    \"SearchBar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,iDACA","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///Users/WoundCentrics/Desktop/Code%20Projects/Work%20Projects/Hippa/company-wiki/src/components/layout/WikiLayout.tsx"],"sourcesContent":["import React from 'react';\nimport { Sidebar } from '../sidebar/Sidebar';\nimport { Breadcrumb } from '../navigation/Breadcrumb';\nimport { SearchBar } from '../search/SearchBar';\n\ntype WikiLayoutProps = {\n  children: React.ReactNode;\n};\n\nexport const WikiLayout = ({ children }: WikiLayoutProps) => {\n  return (\n    <div className=\"flex h-screen bg-gray-50 dark:bg-gray-950\">\n      {/* Sidebar */}\n      <Sidebar />\n      \n      {/* Main content */}\n      <div className=\"flex-1 h-screen flex flex-col overflow-auto\">\n        {/* Header with Breadcrumb and Search */}\n        <div className=\"bg-white dark:bg-gray-900 border-b border-gray-200 dark:border-gray-800\">\n          <div className=\"flex flex-col md:flex-row md:items-center md:justify-between px-4 py-3\">\n            <Breadcrumb />\n            <div className=\"mt-3 md:mt-0\">\n              <SearchBar />\n            </div>\n          </div>\n        </div>\n        \n        {/* Content area */}\n        <main className=\"flex-1 overflow-auto p-6\">\n          <div className=\"max-w-4xl mx-auto\">\n            {children}\n          </div>\n        </main>\n        \n        {/* Footer */}\n        <footer className=\"py-4 px-6 border-t border-gray-200 dark:border-gray-800 bg-white dark:bg-gray-900\">\n          <div className=\"text-center text-sm text-gray-500 dark:text-gray-400\">\n            © {new Date().getFullYear()} Company Wiki • HIPAA Compliant\n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;AAMO,MAAM,aAAa,CAAC,EAAE,QAAQ,EAAmB;IACtD,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC,wIAAA,CAAA,UAAO;;;;;0BAGR,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,8IAAA,CAAA,aAAU;;;;;8CACX,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC,yIAAA,CAAA,YAAS;;;;;;;;;;;;;;;;;;;;;kCAMhB,8OAAC;wBAAK,WAAU;kCACd,cAAA,8OAAC;4BAAI,WAAU;sCACZ;;;;;;;;;;;kCAKL,8OAAC;wBAAO,WAAU;kCAChB,cAAA,8OAAC;4BAAI,WAAU;;gCAAuD;gCACjE,IAAI,OAAO,WAAW;gCAAG;;;;;;;;;;;;;;;;;;;;;;;;AAMxC","debugId":null}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file:///Users/WoundCentrics/Desktop/Code%20Projects/Work%20Projects/Hippa/company-wiki/src/components/content/MDXContent.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const MDXContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call MDXContent() from the server but MDXContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/content/MDXContent.tsx <module evaluation>\",\n    \"MDXContent\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,uEACA","debugId":null}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file:///Users/WoundCentrics/Desktop/Code%20Projects/Work%20Projects/Hippa/company-wiki/src/components/content/MDXContent.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const MDXContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call MDXContent() from the server but MDXContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/content/MDXContent.tsx\",\n    \"MDXContent\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,mDACA","debugId":null}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":["file:///Users/WoundCentrics/Desktop/Code%20Projects/Work%20Projects/Hippa/company-wiki/src/utils/mdx.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter';\nimport { compileMDX } from 'next-mdx-remote/rsc';\nimport rehypeHighlight from 'rehype-highlight';\nimport rehypeSlug from 'rehype-slug';\nimport remarkGfm from 'remark-gfm';\n\n// Define the content directory path\nconst contentDirectory = path.join(process.cwd(), 'content');\n\n// Define the frontmatter type\nexport interface Frontmatter {\n  title: string;\n  description?: string;\n  category?: string;\n  tags?: string[];\n  lastUpdated?: string;\n  [key: string]: any;\n}\n\nexport interface MDXContent {\n  frontmatter: Frontmatter;\n  content: React.ReactElement;\n  rawContent: string;\n  slug: string;\n}\n\nexport interface MDXListItem {\n  frontmatter: Frontmatter;\n  slug: string;\n  path: string;\n}\n\n/**\n * Get all content files from a directory recursively\n */\nexport function getAllContentFilePaths(dir: string = contentDirectory): string[] {\n  const files: string[] = [];\n  \n  // Get all files from the directory\n  const items = fs.readdirSync(dir, { withFileTypes: true });\n  \n  // Loop through each item\n  for (const item of items) {\n    const itemPath = path.join(dir, item.name);\n    \n    if (item.isDirectory()) {\n      // If directory, recurse and get files\n      files.push(...getAllContentFilePaths(itemPath));\n    } else if (item.isFile() && (item.name.endsWith('.md') || item.name.endsWith('.mdx'))) {\n      // If markdown file, add to list\n      files.push(itemPath);\n    }\n  }\n  \n  return files;\n}\n\n/**\n * Get content from a markdown file\n */\nexport async function getMDXContent(filePath: string): Promise<MDXContent> {\n  // Read the file\n  const fileContent = fs.readFileSync(filePath, 'utf8');\n  \n  // Extract frontmatter\n  const { data, content } = matter(fileContent);\n  \n  // Compile MDX\n  const compiled = await compileMDX({\n    source: content,\n    options: {\n      parseFrontmatter: true,\n      mdxOptions: {\n        rehypePlugins: [\n          rehypeHighlight,\n          rehypeSlug\n        ],\n        remarkPlugins: [\n          remarkGfm\n        ],\n      }\n    }\n  });\n  \n  // Get slug from file path\n  const relativePath = filePath.replace(contentDirectory, '');\n  const slug = relativePath\n    .replace(/^\\//, '') // Remove leading slash\n    .replace(/\\.(md|mdx)$/, ''); // Remove extension\n  \n  return {\n    frontmatter: data as Frontmatter,\n    content: compiled.content,\n    rawContent: content,\n    slug,\n  };\n}\n\n/**\n * Get all content metadata (frontmatter) from a directory\n */\nexport async function getAllContentMeta(directory: string = ''): Promise<MDXListItem[]> {\n  const dir = path.join(contentDirectory, directory);\n  \n  // Check if directory exists\n  if (!fs.existsSync(dir)) {\n    return [];\n  }\n  \n  // Get all markdown files in the directory\n  const files = getAllContentFilePaths(dir);\n  \n  // Extract frontmatter from each file\n  const contentMeta = files.map(filePath => {\n    const fileContent = fs.readFileSync(filePath, 'utf8');\n    const { data } = matter(fileContent);\n    \n    // Get slug from file path\n    const relativePath = filePath.replace(contentDirectory, '');\n    const slug = relativePath\n      .replace(/^\\//, '') // Remove leading slash\n      .replace(/\\.(md|mdx)$/, ''); // Remove extension\n    \n    return {\n      frontmatter: data as Frontmatter,\n      slug,\n      path: relativePath,\n    };\n  });\n  \n  // Sort by title\n  return contentMeta.sort((a, b) => {\n    if (a.frontmatter.title < b.frontmatter.title) return -1;\n    if (a.frontmatter.title > b.frontmatter.title) return 1;\n    return 0;\n  });\n}\n\n/**\n * Get content by slug\n */\nexport async function getContentBySlug(slug: string): Promise<MDXContent | null> {\n  // Log the slug for debugging\n  console.log(`Looking for content with slug: ${slug}`);\n  \n  // Construct possible file paths (.md or .mdx)\n  const mdPath = path.join(contentDirectory, `${slug}.md`);\n  const mdxPath = path.join(contentDirectory, `${slug}.mdx`);\n  const indexMdPath = path.join(contentDirectory, slug, 'index.md');\n  const indexMdxPath = path.join(contentDirectory, slug, 'index.mdx');\n  \n  // Check if any of the possible files exist\n  let filePath: string | null = null;\n  \n  // Try all possible file paths\n  if (fs.existsSync(mdPath)) {\n    console.log(`Found file at: ${mdPath}`);\n    filePath = mdPath;\n  } else if (fs.existsSync(mdxPath)) {\n    console.log(`Found file at: ${mdxPath}`);\n    filePath = mdxPath;\n  } else if (fs.existsSync(indexMdPath)) {\n    console.log(`Found index file at: ${indexMdPath}`);\n    filePath = indexMdPath;\n  } else if (fs.existsSync(indexMdxPath)) {\n    console.log(`Found index file at: ${indexMdxPath}`);\n    filePath = indexMdxPath;\n  } else {\n    console.error(`No content file found for slug: ${slug}`);\n    return null;\n  }\n  \n  // Read and parse the content\n  try {\n    return await getMDXContent(filePath);\n  } catch (error) {\n    console.error(`Error parsing content for slug ${slug}:`, error);\n    return null;\n  }\n}\n\n/**\n * Get content by section\n */\nexport async function getContentBySection(section: string): Promise<MDXListItem[]> {\n  return await getAllContentMeta(section);\n}\n\n/**\n * Organize content into sections\n */\nexport async function getContentSections(): Promise<Record<string, MDXListItem[]>> {\n  // Get all top-level directories in the content directory\n  const items = fs.readdirSync(contentDirectory, { withFileTypes: true });\n  const sections: Record<string, MDXListItem[]> = {};\n  \n  // For each directory, get content metadata\n  for (const item of items) {\n    if (item.isDirectory()) {\n      const sectionItems = await getContentBySection(item.name);\n      sections[item.name] = sectionItems;\n    }\n  }\n  \n  return sections;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 479, "column": 0}, "map": {"version":3,"sources":["file:///Users/WoundCentrics/Desktop/Code%20Projects/Work%20Projects/Hippa/company-wiki/src/app/wiki/hipaa/page.tsx"],"sourcesContent":["/**\n * HIPAA Wiki Page\n * \n * Server component that displays the main HIPAA documentation hub\n * using the MDXContent component to render the content.\n * \n * #tags: hipaa, documentation, server-component\n */\nimport { WikiLayout } from '@/components/layout/WikiLayout';\nimport { MDXContent } from '@/components/content/MDXContent';\nimport { getContentBySlug } from '@/utils/mdx';\nimport { Metadata } from 'next';\n\n// Generate metadata for the page\nexport async function generateMetadata(): Promise<Metadata> {\n  try {\n    const content = await getContentBySlug('hipaa');\n    \n    if (content && content.frontmatter) {\n      return {\n        title: content.frontmatter.title || 'HIPAA Compliance Documentation',\n        description: content.frontmatter.description || 'Comprehensive guide to HIPAA compliance for healthcare software development',\n      };\n    }\n  } catch (error) {\n    console.error('Error generating metadata:', error);\n  }\n  \n  return {\n    title: 'HIPAA Compliance Documentation',\n    description: 'Comprehensive guide to HIPAA compliance for healthcare software development',\n  };\n}\n\n// Error component for displaying error messages\nfunction ErrorMessage({ title, message }: { title: string, message: string }) {\n  return (\n    <div className=\"p-6 bg-red-100 dark:bg-red-900/30 rounded-lg\">\n      <h1 className=\"text-2xl font-bold text-red-800 dark:text-red-200 mb-4\">{title}</h1>\n      <p className=\"text-red-700 dark:text-red-300\">{message}</p>\n    </div>\n  );\n}\n\nexport default async function HipaaPage() {\n  try {\n    // Load HIPAA content using the server component\n    const content = await getContentBySlug('hipaa');\n    \n    if (content) {\n      return (\n        <WikiLayout>\n          <MDXContent content={content} />\n        </WikiLayout>\n      );\n    }\n    \n    // Try loading from index.md as a fallback\n    const indexContent = await getContentBySlug('hipaa/index');\n    if (indexContent) {\n      return (\n        <WikiLayout>\n          <MDXContent content={indexContent} />\n        </WikiLayout>\n      );\n    }\n    \n    // If no content found, display error\n    return (\n      <WikiLayout>\n        <ErrorMessage \n          title=\"Content Not Found\" \n          message=\"We couldn't find the HIPAA documentation content. Please check if the content files are properly set up.\" \n        />\n      </WikiLayout>\n    );\n  } catch (error) {\n    console.error('Error loading HIPAA content:', error);\n    \n    return (\n      <WikiLayout>\n        <ErrorMessage \n          title=\"Error Loading Content\" \n          message=\"There was a problem loading the HIPAA documentation content. Please try again later.\" \n        />\n      </WikiLayout>\n    );\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;;;AACD;AACA;AACA;;;;;;;;;AAIO,eAAe;IACpB,IAAI;QACF,MAAM,UAAU,MAAM,CAAA,GAAA,mHAAA,CAAA,mBAAgB,AAAD,EAAE;QAEvC,IAAI,WAAW,QAAQ,WAAW,EAAE;YAClC,OAAO;gBACL,OAAO,QAAQ,WAAW,CAAC,KAAK,IAAI;gBACpC,aAAa,QAAQ,WAAW,CAAC,WAAW,IAAI;YAClD;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;IAC9C;IAEA,OAAO;QACL,OAAO;QACP,aAAa;IACf;AACF;AAEA,gDAAgD;AAChD,SAAS,aAAa,EAAE,KAAK,EAAE,OAAO,EAAsC;IAC1E,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0D;;;;;;0BACxE,8OAAC;gBAAE,WAAU;0BAAkC;;;;;;;;;;;;AAGrD;AAEe,eAAe;IAC5B,IAAI;QACF,gDAAgD;QAChD,MAAM,UAAU,MAAM,CAAA,GAAA,mHAAA,CAAA,mBAAgB,AAAD,EAAE;QAEvC,IAAI,SAAS;YACX,qBACE,8OAAC,0IAAA,CAAA,aAAU;0BACT,cAAA,8OAAC,2IAAA,CAAA,aAAU;oBAAC,SAAS;;;;;;;;;;;QAG3B;QAEA,0CAA0C;QAC1C,MAAM,eAAe,MAAM,CAAA,GAAA,mHAAA,CAAA,mBAAgB,AAAD,EAAE;QAC5C,IAAI,cAAc;YAChB,qBACE,8OAAC,0IAAA,CAAA,aAAU;0BACT,cAAA,8OAAC,2IAAA,CAAA,aAAU;oBAAC,SAAS;;;;;;;;;;;QAG3B;QAEA,qCAAqC;QACrC,qBACE,8OAAC,0IAAA,CAAA,aAAU;sBACT,cAAA,8OAAC;gBACC,OAAM;gBACN,SAAQ;;;;;;;;;;;IAIhB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAE9C,qBACE,8OAAC,0IAAA,CAAA,aAAU;sBACT,cAAA,8OAAC;gBACC,OAAM;gBACN,SAAQ;;;;;;;;;;;IAIhB;AACF","debugId":null}}]
}