{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/WoundCentrics/Desktop/Code%20Projects/Work%20Projects/Hippa/company-wiki/src/components/theme/ThemeToggle.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useState } from 'react';\nimport { SunIcon, MoonIcon } from '@heroicons/react/24/outline';\n\ntype Theme = 'light' | 'dark';\n\nexport const ThemeToggle = () => {\n  const [theme, setTheme] = useState<Theme>('dark');\n  \n  // Initialize theme on component mount\n  useEffect(() => {\n    // Check for saved theme preference or use system preference\n    const savedTheme = localStorage.getItem('theme') as Theme | null;\n    const systemPreference = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n    \n    const initialTheme = savedTheme || systemPreference;\n    setTheme(initialTheme);\n    applyTheme(initialTheme);\n  }, []);\n  \n  // Apply theme changes\n  const applyTheme = (newTheme: Theme) => {\n    if (newTheme === 'dark') {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n    \n    // Save preference to localStorage\n    localStorage.setItem('theme', newTheme);\n  };\n  \n  // Toggle between light and dark mode\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n    applyTheme(newTheme);\n  };\n  \n  return (\n    <button\n      onClick={toggleTheme}\n      className=\"p-2 rounded-lg bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n      title={theme === 'light' ? 'Switch to dark mode' : 'Switch to light mode'}\n    >\n      {theme === 'light' ? (\n        <MoonIcon className=\"w-5 h-5\" />\n      ) : (\n        <SunIcon className=\"w-5 h-5\" />\n      )}\n    </button>\n  );\n};\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAHA;;;;AAOO,MAAM,cAAc;IACzB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS;IAE1C,sCAAsC;IACtC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,4DAA4D;QAC5D,MAAM,aAAa,aAAa,OAAO,CAAC;QACxC,MAAM,mBAAmB,OAAO,UAAU,CAAC,gCAAgC,OAAO,GAAG,SAAS;QAE9F,MAAM,eAAe,cAAc;QACnC,SAAS;QACT,WAAW;IACb,GAAG,EAAE;IAEL,sBAAsB;IACtB,MAAM,aAAa,CAAC;QAClB,IAAI,aAAa,QAAQ;YACvB,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;QACzC,OAAO;YACL,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;QAC5C;QAEA,kCAAkC;QAClC,aAAa,OAAO,CAAC,SAAS;IAChC;IAEA,qCAAqC;IACrC,MAAM,cAAc;QAClB,MAAM,WAAW,UAAU,UAAU,SAAS;QAC9C,SAAS;QACT,WAAW;IACb;IAEA,qBACE,8OAAC;QACC,SAAS;QACT,WAAU;QACV,OAAO,UAAU,UAAU,wBAAwB;kBAElD,UAAU,wBACT,8OAAC,+MAAA,CAAA,WAAQ;YAAC,WAAU;;;;;iCAEpB,8OAAC,6MAAA,CAAA,UAAO;YAAC,WAAU;;;;;;;;;;;AAI3B","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///Users/WoundCentrics/Desktop/Code%20Projects/Work%20Projects/Hippa/company-wiki/src/components/sidebar/Sidebar.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport { ChevronRightIcon, ChevronDownIcon, Cog6ToothIcon } from '@heroicons/react/24/outline';\nimport { ThemeToggle } from '../theme/ThemeToggle';\n\ntype NavItem = {\n  title: string;\n  path: string;\n  children?: NavItem[];\n};\n\nconst mainNavItems: NavItem[] = [\n  {\n    title: 'Home',\n    path: '/',\n  },\n  {\n    title: 'Company Wiki',\n    path: '/wiki/company-wiki',\n    children: [\n      {\n        title: 'About',\n        path: '/wiki/company-wiki/about',\n      },\n      {\n        title: 'Teams',\n        path: '/wiki/company-wiki/teams',\n      },\n    ],\n  },\n  {\n    title: 'HIPAA',\n    path: '/wiki/hipaa',\n    children: [\n      {\n        title: 'Comprehensive Guide',\n        path: '/wiki/hipaa/comprehensive-guide',\n      },\n      {\n        title: 'Dashboard',\n        path: '/wiki/hipaa/dashboard',\n      },\n      {\n        title: 'Checklists',\n        path: '/wiki/hipaa/checklists',\n      },\n      {\n        title: 'Documentation',\n        path: '/wiki/hipaa/documentation',\n        children: [\n          {\n            title: 'Technical Security',\n            path: '/wiki/hipaa/documentation/technical-security',\n          },\n          {\n            title: 'Access Control',\n            path: '/wiki/hipaa/documentation/access-control',\n          },\n          {\n            title: 'CCM Requirements',\n            path: '/wiki/hipaa/documentation/ccm-specific-requirements',\n          },\n          {\n            title: 'Incident Response',\n            path: '/wiki/hipaa/documentation/incident-response',\n          },\n          {\n            title: 'LLM Compliance',\n            path: '/wiki/hipaa/documentation/llm-compliance',\n          },\n        ],\n      }\n    ],\n  },\n  {\n    title: 'SOPs',\n    path: '/wiki/sop',\n    children: [\n      {\n        title: 'Engineering',\n        path: '/wiki/sop/engineering',\n        children: [\n          {\n            title: 'Deployment',\n            path: '/wiki/sop/engineering/deployment',\n          },\n          {\n            title: 'Code Review',\n            path: '/wiki/sop/engineering/code-review',\n          },\n        ],\n      },\n      {\n        title: 'Compliance',\n        path: '/wiki/sop/compliance',\n        children: [\n          {\n            title: 'Incident Response',\n            path: '/wiki/sop/compliance/incident-response',\n          },\n          {\n            title: 'Audit Procedures',\n            path: '/wiki/sop/compliance/audit-procedures',\n          },\n        ],\n      },\n    ],\n  },\n];\n\n// NavItem component\nconst NavItem = ({ item, depth = 0 }: { item: NavItem; depth?: number }) => {\n  const pathname = usePathname();\n  const [isOpen, setIsOpen] = React.useState(pathname.startsWith(item.path));\n  const hasChildren = item.children && item.children.length > 0;\n  const isActive = pathname === item.path;\n  \n  return (\n    <div className=\"w-full\">\n      <div \n        className={`flex items-center justify-between py-2 pr-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800 ${\n          isActive ? 'bg-gray-100 dark:bg-gray-800 font-medium' : ''\n        }`}\n        style={{ paddingLeft: `${depth * 0.75 + 0.5}rem` }}\n      >\n        <Link \n          href={item.path}\n          className={`flex-grow text-sm ${isActive ? 'text-blue-600 dark:text-blue-400' : ''}`}\n        >\n          {item.title}\n        </Link>\n        \n        {hasChildren && (\n          <button \n            onClick={() => setIsOpen(!isOpen)}\n            className=\"p-1 rounded-md hover:bg-gray-200 dark:hover:bg-gray-700\"\n          >\n            {isOpen ? (\n              <ChevronDownIcon className=\"w-4 h-4\" />\n            ) : (\n              <ChevronRightIcon className=\"w-4 h-4\" />\n            )}\n          </button>\n        )}\n      </div>\n      \n      {/* Child items */}\n      {hasChildren && isOpen && (\n        <div className=\"pl-4 border-l border-gray-200 dark:border-gray-700 ml-2\">\n          {item.children?.map((child) => (\n            <NavItem key={child.path} item={child} depth={depth + 1} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport const Sidebar = () => {\n  return (\n    <div className=\"w-64 h-screen overflow-y-auto border-r border-gray-200 dark:border-gray-800 bg-white dark:bg-gray-900 py-4 px-2 flex flex-col\">\n      <div className=\"flex items-center justify-between px-2 mb-6\">\n        <div>\n          <h1 className=\"text-xl font-bold text-gray-900 dark:text-white\">Company Wiki</h1>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">Documentation & SOPs</p>\n        </div>\n        <ThemeToggle />\n      </div>\n      \n      <nav className=\"space-y-1 flex-1 overflow-y-auto\">\n        {mainNavItems.map((item) => (\n          <NavItem key={item.path} item={item} />\n        ))}\n      </nav>\n      \n      <div className=\"mt-auto pt-4 border-t border-gray-200 dark:border-gray-800\">\n        <div className=\"px-2 py-2 flex items-center text-sm text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-md\">\n          <Cog6ToothIcon className=\"w-5 h-5 mr-2\" />\n          <span>Settings</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 394, "column": 0}, "map": {"version":3,"sources":["file:///Users/WoundCentrics/Desktop/Code%20Projects/Work%20Projects/Hippa/company-wiki/src/components/navigation/Breadcrumb.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport { ChevronRightIcon, HomeIcon } from '@heroicons/react/24/outline';\n\nexport const Breadcrumb = () => {\n  const pathname = usePathname();\n  \n  // Skip rendering breadcrumbs on homepage\n  if (pathname === '/') {\n    return null;\n  }\n  \n  // Convert pathname to breadcrumb items\n  const pathSegments = pathname.split('/').filter(Boolean);\n  const breadcrumbItems = pathSegments.map((segment, index) => {\n    // Build the URL for this breadcrumb item\n    const url = `/${pathSegments.slice(0, index + 1).join('/')}`;\n    \n    // Format the title (capitalize and replace hyphens with spaces)\n    const title = segment\n      .split('-')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n    \n    return { title, url };\n  });\n  \n  // Add home as the first item\n  breadcrumbItems.unshift({ title: 'Home', url: '/' });\n  \n  return (\n    <nav className=\"flex py-3 px-4 text-sm text-gray-600 dark:text-gray-300 border-b border-gray-200 dark:border-gray-800 bg-white dark:bg-gray-900\">\n      <ol className=\"inline-flex items-center space-x-1 md:space-x-3\">\n        {breadcrumbItems.map((item, index) => (\n          <li key={item.url} className=\"inline-flex items-center\">\n            {index > 0 && (\n              <ChevronRightIcon className=\"w-4 h-4 mx-1 text-gray-400\" />\n            )}\n            \n            {index === 0 && (\n              <HomeIcon className=\"w-4 h-4 mr-1\" />\n            )}\n            \n            {index === breadcrumbItems.length - 1 ? (\n              <span className=\"text-gray-500 dark:text-gray-400\" aria-current=\"page\">\n                {item.title}\n              </span>\n            ) : (\n              <Link \n                href={item.url}\n                className=\"hover:text-blue-600 dark:hover:text-blue-400\"\n              >\n                {item.title}\n              </Link>\n            )}\n          </li>\n        ))}\n      </ol>\n    </nav>\n  );\n};\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAAA;AALA;;;;;AAOO,MAAM,aAAa;IACxB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAE3B,yCAAyC;IACzC,IAAI,aAAa,KAAK;QACpB,OAAO;IACT;IAEA,uCAAuC;IACvC,MAAM,eAAe,SAAS,KAAK,CAAC,KAAK,MAAM,CAAC;IAChD,MAAM,kBAAkB,aAAa,GAAG,CAAC,CAAC,SAAS;QACjD,yCAAyC;QACzC,MAAM,MAAM,CAAC,CAAC,EAAE,aAAa,KAAK,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,MAAM;QAE5D,gEAAgE;QAChE,MAAM,QAAQ,QACX,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACtD,IAAI,CAAC;QAER,OAAO;YAAE;YAAO;QAAI;IACtB;IAEA,6BAA6B;IAC7B,gBAAgB,OAAO,CAAC;QAAE,OAAO;QAAQ,KAAK;IAAI;IAElD,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAG,WAAU;sBACX,gBAAgB,GAAG,CAAC,CAAC,MAAM,sBAC1B,8OAAC;oBAAkB,WAAU;;wBAC1B,QAAQ,mBACP,8OAAC,+NAAA,CAAA,mBAAgB;4BAAC,WAAU;;;;;;wBAG7B,UAAU,mBACT,8OAAC,+MAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;wBAGrB,UAAU,gBAAgB,MAAM,GAAG,kBAClC,8OAAC;4BAAK,WAAU;4BAAmC,gBAAa;sCAC7D,KAAK,KAAK;;;;;iDAGb,8OAAC,4JAAA,CAAA,UAAI;4BACH,MAAM,KAAK,GAAG;4BACd,WAAU;sCAET,KAAK,KAAK;;;;;;;mBAlBR,KAAK,GAAG;;;;;;;;;;;;;;;AA0B3B","debugId":null}},
    {"offset": {"line": 491, "column": 0}, "map": {"version":3,"sources":["file:///Users/WoundCentrics/Desktop/Code%20Projects/Work%20Projects/Hippa/company-wiki/src/components/search/SearchBar.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from 'react';\nimport { MagnifyingGlassIcon } from '@heroicons/react/24/outline';\n\ninterface SearchResult {\n  title: string;\n  description: string;\n  path: string;\n  matches: string[];\n}\n\nexport const SearchBar = () => {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState<SearchResult[]>([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n\n  const handleSearch = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!query.trim()) {\n      setResults([]);\n      setShowResults(false);\n      return;\n    }\n    \n    setIsSearching(true);\n    setShowResults(true);\n    \n    // Simulated search results - in a real implementation, this would call an API\n    setTimeout(() => {\n      // Mock results based on the query\n      const mockResults: SearchResult[] = [\n        {\n          title: \"HIPAA Documentation\",\n          description: \"Comprehensive guide to HIPAA compliance for healthcare software development\",\n          path: \"/wiki/hipaa\",\n          matches: [\"Comprehensive HIPAA resources\"]\n        },\n        {\n          title: \"Technical Security Standards\",\n          description: \"HIPAA technical security requirements for healthcare software\",\n          path: \"/wiki/hipaa/core/technical-security\",\n          matches: [\"All PHI stored in databases must be encrypted\"]\n        },\n      ].filter(result => \n        result.title.toLowerCase().includes(query.toLowerCase()) || \n        result.description.toLowerCase().includes(query.toLowerCase()) ||\n        result.matches.some(match => match.toLowerCase().includes(query.toLowerCase()))\n      );\n      \n      setResults(mockResults);\n      setIsSearching(false);\n    }, 500);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    if (e.target.value === '') {\n      setResults([]);\n      setShowResults(false);\n    }\n  };\n\n  const handleClickOutside = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (e.target === e.currentTarget) {\n      setShowResults(false);\n    }\n  };\n\n  return (\n    <div className=\"relative w-full max-w-lg\">\n      <form onSubmit={handleSearch} className=\"w-full\">\n        <div className=\"relative\">\n          <input\n            type=\"text\"\n            placeholder=\"Search documentation...\"\n            value={query}\n            onChange={handleInputChange}\n            onFocus={() => query.trim() && setShowResults(true)}\n            className=\"w-full py-2 pl-10 pr-4 border border-gray-300 dark:border-gray-700 rounded-lg bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          />\n          <div className=\"absolute inset-y-0 left-0 flex items-center pl-3\">\n            <MagnifyingGlassIcon className=\"w-5 h-5 text-gray-400 dark:text-gray-500\" />\n          </div>\n          {isSearching && (\n            <div className=\"absolute inset-y-0 right-0 flex items-center pr-3\">\n              <div className=\"w-4 h-4 border-2 border-gray-400 dark:border-gray-500 border-t-transparent rounded-full animate-spin\"></div>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {showResults && (\n        <div \n          className=\"fixed inset-0 bg-black bg-opacity-25 z-40\"\n          onClick={handleClickOutside}\n        >\n          <div className=\"absolute top-16 left-0 right-0 mx-auto w-full max-w-2xl bg-white dark:bg-gray-800 rounded-lg shadow-lg z-50 overflow-hidden max-h-[80vh] overflow-y-auto\">\n            <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\n                Search Results {results.length ? `(${results.length})` : ''}\n              </h3>\n            </div>\n            \n            {results.length === 0 ? (\n              <div className=\"p-6 text-center text-gray-500 dark:text-gray-400\">\n                {isSearching ? 'Searching...' : 'No results found'}\n              </div>\n            ) : (\n              <ul className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                {results.map((result, index) => (\n                  <li key={index} className=\"p-4 hover:bg-gray-50 dark:hover:bg-gray-700\">\n                    <a href={result.path} className=\"block\" onClick={() => setShowResults(false)}>\n                      <h4 className=\"text-base font-medium text-blue-600 dark:text-blue-400\">{result.title}</h4>\n                      <p className=\"mt-1 text-sm text-gray-600 dark:text-gray-300\">{result.description}</p>\n                      {result.matches.length > 0 && (\n                        <div className=\"mt-2 text-xs text-gray-500 dark:text-gray-400\">\n                          <span className=\"block font-medium mb-1\">Matching content:</span>\n                          {result.matches.map((match, idx) => (\n                            <p key={idx} className=\"truncate\">• {match}</p>\n                          ))}\n                        </div>\n                      )}\n                    </a>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 736, "column": 0}, "map": {"version":3,"sources":["file:///Users/WoundCentrics/Desktop/Code%20Projects/Work%20Projects/Hippa/company-wiki/src/components/layout/WikiLayout.tsx"],"sourcesContent":["import React from 'react';\nimport { Sidebar } from '../sidebar/Sidebar';\nimport { Breadcrumb } from '../navigation/Breadcrumb';\nimport { SearchBar } from '../search/SearchBar';\n\ntype WikiLayoutProps = {\n  children: React.ReactNode;\n};\n\nexport const WikiLayout = ({ children }: WikiLayoutProps) => {\n  return (\n    <div className=\"flex h-screen bg-gray-50 dark:bg-gray-950\">\n      {/* Sidebar */}\n      <Sidebar />\n      \n      {/* Main content */}\n      <div className=\"flex-1 h-screen flex flex-col overflow-auto\">\n        {/* Header with Breadcrumb and Search */}\n        <div className=\"bg-white dark:bg-gray-900 border-b border-gray-200 dark:border-gray-800\">\n          <div className=\"flex flex-col md:flex-row md:items-center md:justify-between px-4 py-3\">\n            <Breadcrumb />\n            <div className=\"mt-3 md:mt-0\">\n              <SearchBar />\n            </div>\n          </div>\n        </div>\n        \n        {/* Content area */}\n        <main className=\"flex-1 overflow-auto p-6\">\n          <div className=\"max-w-4xl mx-auto\">\n            {children}\n          </div>\n        </main>\n        \n        {/* Footer */}\n        <footer className=\"py-4 px-6 border-t border-gray-200 dark:border-gray-800 bg-white dark:bg-gray-900\">\n          <div className=\"text-center text-sm text-gray-500 dark:text-gray-400\">\n            © {new Date().getFullYear().toString()} Company Wiki • HIPAA Compliant\n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;AAMO,MAAM,aAAa,CAAC,EAAE,QAAQ,EAAmB;IACtD,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC,wIAAA,CAAA,UAAO;;;;;0BAGR,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,8IAAA,CAAA,aAAU;;;;;8CACX,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC,yIAAA,CAAA,YAAS;;;;;;;;;;;;;;;;;;;;;kCAMhB,8OAAC;wBAAK,WAAU;kCACd,cAAA,8OAAC;4BAAI,WAAU;sCACZ;;;;;;;;;;;kCAKL,8OAAC;wBAAO,WAAU;kCAChB,cAAA,8OAAC;4BAAI,WAAU;;gCAAuD;gCACjE,IAAI,OAAO,WAAW,GAAG,QAAQ;gCAAG;;;;;;;;;;;;;;;;;;;;;;;;AAMnD","debugId":null}},
    {"offset": {"line": 845, "column": 0}, "map": {"version":3,"sources":["file:///Users/WoundCentrics/Desktop/Code%20Projects/Work%20Projects/Hippa/company-wiki/src/components/hipaa/HipaaChecklist.tsx"],"sourcesContent":["/**\n * HIPAA Checklist Component\n * \n * Server component that renders interactive checklists for HIPAA compliance verification.\n * \n * #tags: hipaa, checklist, compliance\n */\nimport React from 'react';\n\nexport interface ChecklistItem {\n  id: string;\n  category: string;\n  label: string;\n  description?: string;\n  completed: boolean;\n  priority: 'high' | 'medium' | 'low';\n}\n\nexport interface ChecklistCategory {\n  id: string;\n  name: string;\n  description?: string;\n  items: ChecklistItem[];\n}\n\nexport interface HipaaChecklistProps {\n  title: string;\n  description?: string;\n  categories: ChecklistCategory[];\n  lastUpdated?: string;\n  onItemToggle?: (itemId: string, completed: boolean) => void;\n}\n\n// Server component that renders the checklist UI\nexport function HipaaChecklist({ \n  title, \n  description, \n  categories, \n  lastUpdated,\n  onItemToggle = () => {}\n}: HipaaChecklistProps) {\n  // Calculate total progress\n  const totalItems = categories.reduce((acc, category) => acc + category.items.length, 0);\n  const completedItems = categories.reduce(\n    (acc, category) => acc + category.items.filter(item => item.completed).length, \n    0\n  );\n  \n  const progressPercentage = totalItems > 0 ? Math.round((completedItems / totalItems) * 100) : 0;\n  \n  return (\n    <div className=\"bg-white dark:bg-gray-900 shadow-sm rounded-lg overflow-hidden\">\n      {/* Header section */}\n      <div className=\"px-6 pt-6 pb-4\">\n        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">{title}</h2>\n        \n        {description && (\n          <p className=\"mt-2 text-gray-600 dark:text-gray-300\">{description}</p>\n        )}\n        \n        {/* Progress bar */}\n        <div className=\"mt-4\">\n          <div className=\"flex justify-between items-center mb-1\">\n            <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n              Progress\n            </span>\n            <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n              {completedItems} of {totalItems} items completed\n            </span>\n          </div>\n          <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2.5\">\n            <div \n              className={`h-2.5 rounded-full ${\n                progressPercentage < 30 ? 'bg-red-500' : \n                progressPercentage < 70 ? 'bg-yellow-500' : \n                'bg-green-500'\n              }`}\n              style={{ width: `${progressPercentage}%` }}\n            ></div>\n          </div>\n        </div>\n        \n        {lastUpdated && (\n          <div className=\"mt-4 text-sm text-gray-500 dark:text-gray-400\">\n            Last updated: {lastUpdated}\n          </div>\n        )}\n      </div>\n      \n      {/* Checklist categories */}\n      <div className=\"border-t border-gray-200 dark:border-gray-800\">\n        {categories.map((category) => (\n          <div \n            key={category.id} \n            className=\"border-b border-gray-200 dark:border-gray-800 last:border-b-0\"\n          >\n            <div className=\"px-6 py-4 bg-gray-50 dark:bg-gray-800\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                {category.name}\n              </h3>\n              {category.description && (\n                <p className=\"mt-1 text-sm text-gray-600 dark:text-gray-300\">\n                  {category.description}\n                </p>\n              )}\n            </div>\n            \n            {/* Category items */}\n            <ul className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n              {category.items.map((item) => (\n                <li key={item.id} className=\"px-6 py-3 hover:bg-gray-50 dark:hover:bg-gray-800/50\">\n                  <div className=\"flex items-start\">\n                    {/* Checkbox (rendered as a div for server component) */}\n                    <div className=\"flex items-center h-5 mt-1\">\n                      <div \n                        className={`w-4 h-4 rounded border ${\n                          item.completed \n                            ? 'bg-blue-600 border-blue-600 flex items-center justify-center' \n                            : 'border-gray-300 dark:border-gray-600'\n                        }`}\n                        data-item-id={item.id}\n                        data-is-completed={item.completed.toString()}\n                        aria-checked={item.completed}\n                        role=\"checkbox\"\n                      >\n                        {item.completed && (\n                          <svg className=\"w-3 h-3 text-white\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                          </svg>\n                        )}\n                      </div>\n                    </div>\n                    \n                    {/* Item content */}\n                    <div className=\"ml-3 text-sm\">\n                      <div className=\"flex items-center\">\n                        <label className=\"font-medium text-gray-700 dark:text-gray-200\">\n                          {item.label}\n                        </label>\n                        \n                        {/* Priority indicator */}\n                        <span className={`ml-2 px-2 py-0.5 text-xs rounded-full\n                          ${item.priority === 'high' ? 'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300' : \n                            item.priority === 'medium' ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300' : \n                            'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300'\n                          }`}>\n                          {item.priority === 'high' ? 'High' : \n                            item.priority === 'medium' ? 'Medium' : 'Low'} priority\n                        </span>\n                      </div>\n                      \n                      {item.description && (\n                        <p className=\"text-gray-500 dark:text-gray-400 mt-1\">\n                          {item.description}\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;;;AA4BM,SAAS,eAAe,EAC7B,KAAK,EACL,WAAW,EACX,UAAU,EACV,WAAW,EACX,eAAe,KAAO,CAAC,EACH;IACpB,2BAA2B;IAC3B,MAAM,aAAa,WAAW,MAAM,CAAC,CAAC,KAAK,WAAa,MAAM,SAAS,KAAK,CAAC,MAAM,EAAE;IACrF,MAAM,iBAAiB,WAAW,MAAM,CACtC,CAAC,KAAK,WAAa,MAAM,SAAS,KAAK,CAAC,MAAM,CAAC,CAAA,OAAQ,KAAK,SAAS,EAAE,MAAM,EAC7E;IAGF,MAAM,qBAAqB,aAAa,IAAI,KAAK,KAAK,CAAC,AAAC,iBAAiB,aAAc,OAAO;IAE9F,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAoD;;;;;;oBAEjE,6BACC,8OAAC;wBAAE,WAAU;kCAAyC;;;;;;kCAIxD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAK,WAAU;kDAAuD;;;;;;kDAGvE,8OAAC;wCAAK,WAAU;;4CACb;4CAAe;4CAAK;4CAAW;;;;;;;;;;;;;0CAGpC,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCACC,WAAW,CAAC,mBAAmB,EAC7B,qBAAqB,KAAK,eAC1B,qBAAqB,KAAK,kBAC1B,gBACA;oCACF,OAAO;wCAAE,OAAO,GAAG,mBAAmB,CAAC,CAAC;oCAAC;;;;;;;;;;;;;;;;;oBAK9C,6BACC,8OAAC;wBAAI,WAAU;;4BAAgD;4BAC9C;;;;;;;;;;;;;0BAMrB,8OAAC;gBAAI,WAAU;0BACZ,WAAW,GAAG,CAAC,CAAC,yBACf,8OAAC;wBAEC,WAAU;;0CAEV,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAG,WAAU;kDACX,SAAS,IAAI;;;;;;oCAEf,SAAS,WAAW,kBACnB,8OAAC;wCAAE,WAAU;kDACV,SAAS,WAAW;;;;;;;;;;;;0CAM3B,8OAAC;gCAAG,WAAU;0CACX,SAAS,KAAK,CAAC,GAAG,CAAC,CAAC,qBACnB,8OAAC;wCAAiB,WAAU;kDAC1B,cAAA,8OAAC;4CAAI,WAAU;;8DAEb,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC;wDACC,WAAW,CAAC,uBAAuB,EACjC,KAAK,SAAS,GACV,iEACA,wCACJ;wDACF,gBAAc,KAAK,EAAE;wDACrB,qBAAmB,KAAK,SAAS,CAAC,QAAQ;wDAC1C,gBAAc,KAAK,SAAS;wDAC5B,MAAK;kEAEJ,KAAK,SAAS,kBACb,8OAAC;4DAAI,WAAU;4DAAqB,SAAQ;4DAAY,MAAK;sEAC3D,cAAA,8OAAC;gEAAK,UAAS;gEAAU,GAAE;gEAAqH,UAAS;;;;;;;;;;;;;;;;;;;;;8DAOjK,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAM,WAAU;8EACd,KAAK,KAAK;;;;;;8EAIb,8OAAC;oEAAK,WAAW,CAAC;0BAChB,EAAE,KAAK,QAAQ,KAAK,SAAS,iEAC3B,KAAK,QAAQ,KAAK,WAAW,6EAC7B,oEACA;;wEACD,KAAK,QAAQ,KAAK,SAAS,SAC1B,KAAK,QAAQ,KAAK,WAAW,WAAW;wEAAM;;;;;;;;;;;;;wDAInD,KAAK,WAAW,kBACf,8OAAC;4DAAE,WAAU;sEACV,KAAK,WAAW;;;;;;;;;;;;;;;;;;uCA3ClB,KAAK,EAAE;;;;;;;;;;;uBAjBf,SAAS,EAAE;;;;;;;;;;;;;;;;AAyE5B","debugId":null}},
    {"offset": {"line": 1115, "column": 0}, "map": {"version":3,"sources":["file:///Users/WoundCentrics/Desktop/Code%20Projects/Work%20Projects/Hippa/company-wiki/src/components/hipaa/HipaaChecklistWrapper.tsx"],"sourcesContent":["\"use client\";\n\n/**\n * Client-side wrapper for the HipaaChecklist component\n * \n * Adds interactivity to the checklist items and provides state management\n * for updating completion status.\n * \n * #tags: hipaa, checklist, client-component\n */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { HipaaChecklist, ChecklistCategory, ChecklistItem } from './HipaaChecklist';\n\nexport interface HipaaChecklistWrapperProps {\n  title: string;\n  description?: string;\n  initialCategories: ChecklistCategory[];\n  lastUpdated?: string;\n  onSave?: (categories: ChecklistCategory[]) => void;\n}\n\nexport function HipaaChecklistWrapper({\n  title,\n  description,\n  initialCategories,\n  lastUpdated,\n  onSave\n}: HipaaChecklistWrapperProps) {\n  // State to track the checklist categories and items\n  const [categories, setCategories] = useState<ChecklistCategory[]>(initialCategories);\n  \n  // Update categories when initialCategories changes\n  useEffect(() => {\n    setCategories(initialCategories);\n  }, [initialCategories]);\n  \n  // Handle toggling a checklist item with useCallback to prevent infinite loops\n  const handleItemToggle = useCallback((itemId: string, completed: boolean) => {\n    setCategories(prevCategories => {\n      const updatedCategories = prevCategories.map(category => {\n        const updatedItems = category.items.map(item => {\n          if (item.id === itemId) {\n            return { ...item, completed: !item.completed };\n          }\n          return item;\n        });\n        \n        return {\n          ...category,\n          items: updatedItems\n        };\n      });\n      \n      if (onSave) {\n        onSave(updatedCategories);\n      }\n      \n      return updatedCategories;\n    });\n  }, [onSave]);\n  \n  // Handle click events on checklist items\n  const handleClick = (event: React.MouseEvent) => {\n    // Find the closest checkbox element\n    const target = event.target as HTMLElement;\n    const checkbox = target.closest('[role=\"checkbox\"]');\n    \n    if (checkbox) {\n      const itemId = checkbox.getAttribute('data-item-id');\n      const isCompleted = checkbox.getAttribute('data-is-completed') === 'true';\n      \n      if (itemId) {\n        handleItemToggle(itemId, isCompleted);\n      }\n    }\n  };\n  \n  return (\n    <div onClick={handleClick}>\n      <HipaaChecklist\n        title={title}\n        description={description}\n        categories={categories}\n        lastUpdated={lastUpdated}\n      />\n      \n      {/* Action buttons */}\n      <div className=\"mt-6 flex justify-end\">\n        <button\n          className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n          onClick={() => onSave && onSave(categories)}\n        >\n          Save Progress\n        </button>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;;;;;;;CAOC,GACD;AACA;AAXA;;;;AAqBO,SAAS,sBAAsB,EACpC,KAAK,EACL,WAAW,EACX,iBAAiB,EACjB,WAAW,EACX,MAAM,EACqB;IAC3B,oDAAoD;IACpD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAuB;IAElE,mDAAmD;IACnD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,cAAc;IAChB,GAAG;QAAC;KAAkB;IAEtB,8EAA8E;IAC9E,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAgB;QACpD,cAAc,CAAA;YACZ,MAAM,oBAAoB,eAAe,GAAG,CAAC,CAAA;gBAC3C,MAAM,eAAe,SAAS,KAAK,CAAC,GAAG,CAAC,CAAA;oBACtC,IAAI,KAAK,EAAE,KAAK,QAAQ;wBACtB,OAAO;4BAAE,GAAG,IAAI;4BAAE,WAAW,CAAC,KAAK,SAAS;wBAAC;oBAC/C;oBACA,OAAO;gBACT;gBAEA,OAAO;oBACL,GAAG,QAAQ;oBACX,OAAO;gBACT;YACF;YAEA,IAAI,QAAQ;gBACV,OAAO;YACT;YAEA,OAAO;QACT;IACF,GAAG;QAAC;KAAO;IAEX,yCAAyC;IACzC,MAAM,cAAc,CAAC;QACnB,oCAAoC;QACpC,MAAM,SAAS,MAAM,MAAM;QAC3B,MAAM,WAAW,OAAO,OAAO,CAAC;QAEhC,IAAI,UAAU;YACZ,MAAM,SAAS,SAAS,YAAY,CAAC;YACrC,MAAM,cAAc,SAAS,YAAY,CAAC,yBAAyB;YAEnE,IAAI,QAAQ;gBACV,iBAAiB,QAAQ;YAC3B;QACF;IACF;IAEA,qBACE,8OAAC;QAAI,SAAS;;0BACZ,8OAAC,6IAAA,CAAA,iBAAc;gBACb,OAAO;gBACP,aAAa;gBACb,YAAY;gBACZ,aAAa;;;;;;0BAIf,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,WAAU;oBACV,SAAS,IAAM,UAAU,OAAO;8BACjC;;;;;;;;;;;;;;;;;AAMT","debugId":null}},
    {"offset": {"line": 1222, "column": 0}, "map": {"version":3,"sources":["file:///Users/WoundCentrics/Desktop/Code%20Projects/Work%20Projects/Hippa/company-wiki/src/lib/mock-data/hipaa-checklist-data.ts"],"sourcesContent":["/**\n * Mock data for HIPAA checklists\n * \n * This file provides structured data for the interactive HIPAA checklists\n * based on categories defined in the HIPAA security and privacy rules.\n * \n * #tags: hipaa, checklist, mock-data\n */\n\nimport { ChecklistCategory, ChecklistItem } from '@/components/hipaa/HipaaChecklist';\n\n// Technical Security checklist items\nconst technicalSecurityItems: ChecklistItem[] = [\n  {\n    id: 'tech-1',\n    category: 'technical',\n    label: 'Implement access controls (unique user identification)',\n    description: 'Ensure each user has unique credentials and appropriate access levels.',\n    completed: false,\n    priority: 'high'\n  },\n  {\n    id: 'tech-2',\n    category: 'technical',\n    label: 'Implement audit controls and activity logs',\n    description: 'Track all access to PHI with appropriate detail for investigations.',\n    completed: false,\n    priority: 'high'\n  },\n  {\n    id: 'tech-3',\n    category: 'technical',\n    label: 'Enable data integrity controls to prevent improper alteration',\n    description: 'Implement mechanisms to ensure that PHI is not improperly altered or destroyed.',\n    completed: false,\n    priority: 'medium'\n  },\n  {\n    id: 'tech-4',\n    category: 'technical',\n    label: 'Use secure transmission methods for PHI',\n    description: 'Implement technical measures to guard against unauthorized access to PHI transmitted over networks.',\n    completed: false,\n    priority: 'high'\n  },\n  {\n    id: 'tech-5',\n    category: 'technical',\n    label: 'Implement encryption for PHI at rest',\n    description: 'Ensure that stored PHI is protected using industry-standard encryption methods.',\n    completed: false,\n    priority: 'high'\n  },\n  {\n    id: 'tech-6',\n    category: 'technical',\n    label: 'Establish automatic logoff procedures',\n    description: 'Implement technical mechanisms that terminate sessions after a predetermined time of inactivity.',\n    completed: false,\n    priority: 'medium'\n  },\n  {\n    id: 'tech-7',\n    category: 'technical',\n    label: 'Implement emergency access procedures',\n    description: 'Establish procedures for obtaining necessary PHI during an emergency.',\n    completed: false,\n    priority: 'medium'\n  },\n  {\n    id: 'tech-8',\n    category: 'technical',\n    label: 'Conduct regular system vulnerability scans',\n    description: 'Perform scans at least quarterly to identify potential security vulnerabilities.',\n    completed: false,\n    priority: 'medium'\n  }\n];\n\n// Administrative Safeguards checklist items\nconst administrativeItems: ChecklistItem[] = [\n  {\n    id: 'admin-1',\n    category: 'administrative',\n    label: 'Conduct security risk assessment',\n    description: 'Conduct an accurate and thorough assessment of potential risks to PHI.',\n    completed: false,\n    priority: 'high'\n  },\n  {\n    id: 'admin-2',\n    category: 'administrative',\n    label: 'Develop and implement security policies and procedures',\n    description: 'Create comprehensive written policies and procedures that address all aspects of PHI security.',\n    completed: false,\n    priority: 'high'\n  },\n  {\n    id: 'admin-3',\n    category: 'administrative',\n    label: 'Designate a security official',\n    description: 'Appoint an individual responsible for developing and implementing security policies.',\n    completed: false,\n    priority: 'high'\n  },\n  {\n    id: 'admin-4',\n    category: 'administrative',\n    label: 'Establish security awareness training for all staff',\n    description: 'Provide regular training for all workforce members on security policies and procedures.',\n    completed: false,\n    priority: 'medium'\n  },\n  {\n    id: 'admin-5',\n    category: 'administrative',\n    label: 'Create incident response and reporting procedures',\n    description: 'Develop procedures for identifying, responding to, and documenting security incidents.',\n    completed: false,\n    priority: 'high'\n  },\n  {\n    id: 'admin-6',\n    category: 'administrative',\n    label: 'Develop contingency plans for emergencies',\n    description: 'Create data backup, disaster recovery, and emergency operations plans.',\n    completed: false,\n    priority: 'medium'\n  },\n  {\n    id: 'admin-7',\n    category: 'administrative',\n    label: 'Conduct regular security evaluations',\n    description: 'Perform periodic technical and non-technical evaluations of security controls.',\n    completed: false,\n    priority: 'medium'\n  },\n  {\n    id: 'admin-8',\n    category: 'administrative',\n    label: 'Establish Business Associate Agreements where required',\n    description: 'Ensure that all business associates who handle PHI have signed appropriate agreements.',\n    completed: false,\n    priority: 'high'\n  }\n];\n\n// Physical Safeguards checklist items\nconst physicalItems: ChecklistItem[] = [\n  {\n    id: 'phys-1',\n    category: 'physical',\n    label: 'Implement facility access controls',\n    description: 'Limit physical access to facilities where systems containing PHI are housed.',\n    completed: false,\n    priority: 'high'\n  },\n  {\n    id: 'phys-2',\n    category: 'physical',\n    label: 'Create policies for workstation use and security',\n    description: 'Implement policies governing the proper use and positioning of workstations with access to PHI.',\n    completed: false,\n    priority: 'medium'\n  },\n  {\n    id: 'phys-3',\n    category: 'physical',\n    label: 'Establish device and media controls',\n    description: 'Implement policies for the receipt and removal of hardware and electronic media containing PHI.',\n    completed: false,\n    priority: 'medium'\n  },\n  {\n    id: 'phys-4',\n    category: 'physical',\n    label: 'Create procedures for media disposal',\n    description: 'Implement procedures for the final disposition of PHI and the hardware or electronic media it is stored on.',\n    completed: false,\n    priority: 'high'\n  },\n  {\n    id: 'phys-5',\n    category: 'physical',\n    label: 'Develop hardware inventory management system',\n    description: 'Maintain records of the movements of hardware and electronic media containing PHI.',\n    completed: false,\n    priority: 'low'\n  },\n  {\n    id: 'phys-6',\n    category: 'physical',\n    label: 'Implement physical security for servers and equipment',\n    description: 'Ensure that servers, network equipment, and backup media are physically secured.',\n    completed: false,\n    priority: 'high'\n  }\n];\n\n// LLM and AI-specific checklist items\nconst llmItems: ChecklistItem[] = [\n  {\n    id: 'llm-1',\n    category: 'llm',\n    label: 'Implement data minimization for LLM inputs containing PHI',\n    description: 'Ensure that only the minimum necessary PHI is included in LLM prompts.',\n    completed: false,\n    priority: 'high'\n  },\n  {\n    id: 'llm-2',\n    category: 'llm',\n    label: 'Establish secure prompt engineering guidelines',\n    description: 'Develop guidelines for creating prompts that minimize risk of PHI disclosure.',\n    completed: false,\n    priority: 'high'\n  },\n  {\n    id: 'llm-3',\n    category: 'llm',\n    label: 'Create policy for reviewing LLM outputs before use',\n    description: 'Implement procedures to review LLM-generated content before incorporating it into PHI workflows.',\n    completed: false,\n    priority: 'medium'\n  },\n  {\n    id: 'llm-4',\n    category: 'llm',\n    label: 'Conduct regular audits of LLM interactions with PHI',\n    description: 'Review logs and records of LLM usage involving PHI to ensure compliance.',\n    completed: false,\n    priority: 'high'\n  },\n  {\n    id: 'llm-5',\n    category: 'llm',\n    label: 'Establish incident response for LLM data breaches',\n    description: 'Develop specific procedures for handling incidents involving LLM misuse or breaches.',\n    completed: false,\n    priority: 'high'\n  },\n  {\n    id: 'llm-6',\n    category: 'llm',\n    label: 'Implement BAAs with LLM service providers',\n    description: 'Ensure business associate agreements are in place with LLM providers who may process PHI.',\n    completed: false,\n    priority: 'high'\n  },\n  {\n    id: 'llm-7',\n    category: 'llm',\n    label: 'Train staff on appropriate LLM use with PHI',\n    description: 'Provide specialized training on safe use of LLMs when dealing with PHI.',\n    completed: false,\n    priority: 'medium'\n  },\n  {\n    id: 'llm-8',\n    category: 'llm',\n    label: 'Document LLM risk assessment',\n    description: 'Complete a specific risk assessment for LLM technologies used with PHI.',\n    completed: false,\n    priority: 'high'\n  }\n];\n\n// CCM-specific checklist items\nconst ccmItems: ChecklistItem[] = [\n  {\n    id: 'ccm-1',\n    category: 'ccm',\n    label: 'Implement secure time tracking for CCM services',\n    description: 'Ensure time tracking systems for CCM billing are secure and HIPAA compliant.',\n    completed: false,\n    priority: 'high'\n  },\n  {\n    id: 'ccm-2',\n    category: 'ccm',\n    label: 'Develop protocols for secure patient communication',\n    description: 'Establish secure methods for communicating with patients during CCM activities.',\n    completed: false,\n    priority: 'high'\n  },\n  {\n    id: 'ccm-3',\n    category: 'ccm',\n    label: 'Create secure care plan sharing procedures',\n    description: 'Implement secure methods for sharing care plans with patients and other providers.',\n    completed: false,\n    priority: 'medium'\n  },\n  {\n    id: 'ccm-4',\n    category: 'ccm',\n    label: 'Establish secure documentation of CCM activities',\n    description: 'Ensure all CCM activities are documented securely in compliance with HIPAA.',\n    completed: false,\n    priority: 'high'\n  },\n  {\n    id: 'ccm-5',\n    category: 'ccm',\n    label: 'Implement consent management for CCM services',\n    description: 'Track and manage patient consent for CCM services in a HIPAA-compliant manner.',\n    completed: false,\n    priority: 'high'\n  },\n  {\n    id: 'ccm-6',\n    category: 'ccm',\n    label: 'Create secure process for handling screenshots',\n    description: 'Establish procedures for securely capturing, storing, and transmitting screenshots.',\n    completed: false,\n    priority: 'high'\n  }\n];\n\n// Export the complete set of checklist categories\nexport const hipaaChecklistCategories: ChecklistCategory[] = [\n  {\n    id: 'technical-security',\n    name: 'Technical Security Safeguards',\n    description: 'Technical measures to protect electronic protected health information (ePHI).',\n    items: technicalSecurityItems\n  },\n  {\n    id: 'administrative',\n    name: 'Administrative Safeguards',\n    description: 'Administrative actions, policies, and procedures to manage security measures.',\n    items: administrativeItems\n  },\n  {\n    id: 'physical',\n    name: 'Physical Safeguards',\n    description: 'Physical measures, policies, and procedures to protect systems and facilities.',\n    items: physicalItems\n  },\n  {\n    id: 'llm',\n    name: 'LLM and AI Safeguards',\n    description: 'Specific controls for using large language models and AI with PHI.',\n    items: llmItems\n  },\n  {\n    id: 'ccm',\n    name: 'CCM Specific Requirements',\n    description: 'Special requirements for Chronic Care Management services.',\n    items: ccmItems\n  }\n];\n\n// Function to get a specific checklist category by ID\nexport function getChecklistCategory(id: string): ChecklistCategory | undefined {\n  return hipaaChecklistCategories.find(category => category.id === id);\n}\n\n// Function to get all checklist items for a specific category\nexport function getChecklistItemsByCategory(categoryId: string): ChecklistItem[] {\n  const category = getChecklistCategory(categoryId);\n  return category ? category.items : [];\n}\n\n// Function to get a filtered checklist with only certain categories\nexport function getFilteredChecklist(categoryIds: string[]): ChecklistCategory[] {\n  return hipaaChecklistCategories.filter(category => \n    categoryIds.includes(category.id)\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1586, "column": 0}, "map": {"version":3,"sources":["file:///Users/WoundCentrics/Desktop/Code%20Projects/Work%20Projects/Hippa/company-wiki/src/app/wiki/hipaa/checklists/page.tsx"],"sourcesContent":["\"use client\";\n\n/**\n * HIPAA Checklists Page\n * \n * Displays interactive HIPAA compliance checklists with completion tracking.\n * \n * #tags: hipaa, checklists, compliance\n */\nimport { useState, useEffect } from 'react';\nimport { WikiLayout } from '@/components/layout/WikiLayout';\nimport { HipaaChecklistWrapper } from '@/components/hipaa/HipaaChecklistWrapper';\nimport { ChecklistCategory } from '@/components/hipaa/HipaaChecklist';\nimport { useSearchParams } from 'next/navigation';\nimport { hipaaChecklistCategories, getChecklistCategory } from '@/lib/mock-data/hipaa-checklist-data';\nimport { useEffect as useEffectKey } from 'react';\n\n// Technical Security safeguards checklist data\nconst technicalSecurityChecklist: ChecklistCategory[] = [\n  {\n    id: 'access-control',\n    name: 'Access Control',\n    description: 'Technical policies and procedures for electronic information systems that maintain ePHI.',\n    items: [\n      {\n        id: 'unique-user-id',\n        category: 'access-control',\n        label: 'Unique user identification for all system users',\n        description: 'Assign a unique name and/or number for identifying and tracking user identity.',\n        completed: true,\n        priority: 'high',\n      },\n      {\n        id: 'emergency-access',\n        category: 'access-control',\n        label: 'Emergency access procedure',\n        description: 'Establish procedures for obtaining necessary ePHI during an emergency.',\n        completed: false,\n        priority: 'high',\n      },\n      {\n        id: 'auto-logoff',\n        category: 'access-control',\n        label: 'Automatic logoff implemented',\n        description: 'Implement electronic procedures that terminate an electronic session after a predetermined time of inactivity.',\n        completed: false,\n        priority: 'medium',\n      },\n      {\n        id: 'encryption-decryption',\n        category: 'access-control',\n        label: 'Encryption and decryption',\n        description: 'Implement a mechanism to encrypt and decrypt ePHI.',\n        completed: true,\n        priority: 'high',\n      },\n    ],\n  },\n  {\n    id: 'audit-controls',\n    name: 'Audit Controls',\n    description: 'Hardware, software, and/or procedural mechanisms that record and examine activity in information systems.',\n    items: [\n      {\n        id: 'activity-logs',\n        category: 'audit-controls',\n        label: 'System activity logs implemented',\n        description: 'Implement hardware, software, and/or procedural mechanisms that record and examine activity in information systems that contain or use ePHI.',\n        completed: true,\n        priority: 'high',\n      },\n      {\n        id: 'audit-review',\n        category: 'audit-controls',\n        label: 'Regular audit log review procedure',\n        description: 'Establish procedures for regularly reviewing records of information system activity.',\n        completed: true,\n        priority: 'medium',\n      },\n      {\n        id: 'audit-retention',\n        category: 'audit-controls',\n        label: 'Audit log retention policy',\n        description: 'Establish policies for audit log retention that comply with regulatory requirements.',\n        completed: false,\n        priority: 'medium',\n      },\n    ],\n  },\n  {\n    id: 'integrity',\n    name: 'Integrity',\n    description: 'Policies and procedures to protect ePHI from improper alteration or destruction.',\n    items: [\n      {\n        id: 'integrity-controls',\n        category: 'integrity',\n        label: 'Data integrity controls implemented',\n        description: 'Implement electronic mechanisms to corroborate that ePHI has not been altered or destroyed in an unauthorized manner.',\n        completed: true,\n        priority: 'high',\n      },\n      {\n        id: 'data-validation',\n        category: 'integrity',\n        label: 'Data validation procedures',\n        description: 'Implement procedures to verify the integrity of ePHI during storage and transmission.',\n        completed: false,\n        priority: 'medium',\n      },\n    ],\n  },\n  {\n    id: 'transmission',\n    name: 'Transmission Security',\n    description: 'Technical security measures to guard against unauthorized access to ePHI being transmitted over a network.',\n    items: [\n      {\n        id: 'transmission-encryption',\n        category: 'transmission',\n        label: 'Encryption for transmission',\n        description: 'Implement a mechanism to encrypt ePHI whenever deemed appropriate.',\n        completed: true,\n        priority: 'high',\n      },\n      {\n        id: 'integrity-checks',\n        category: 'transmission',\n        label: 'Integrity controls for transmission',\n        description: 'Implement security measures to ensure that electronically transmitted ePHI is not improperly modified.',\n        completed: false,\n        priority: 'high',\n      },\n      {\n        id: 'transmission-monitoring',\n        category: 'transmission',\n        label: 'Transmission monitoring',\n        description: 'Implement procedures to monitor and log all transmissions of ePHI.',\n        completed: false,\n        priority: 'medium',\n      },\n    ],\n  },\n];\n\n// Administrative safeguards checklist data\nconst administrativeChecklist: ChecklistCategory[] = [\n  {\n    id: 'risk-analysis',\n    name: 'Risk Analysis',\n    description: 'Conduct an accurate and thorough assessment of potential risks and vulnerabilities.',\n    items: [\n      {\n        id: 'risk-assessment',\n        category: 'risk-analysis',\n        label: 'Conduct risk assessment',\n        description: 'Conduct an accurate and thorough assessment of the potential risks and vulnerabilities to the confidentiality, integrity, and availability of ePHI.',\n        completed: true,\n        priority: 'high',\n      },\n      {\n        id: 'risk-management',\n        category: 'risk-analysis',\n        label: 'Implement risk management program',\n        description: 'Implement security measures sufficient to reduce risks and vulnerabilities to a reasonable and appropriate level.',\n        completed: false,\n        priority: 'high',\n      },\n      {\n        id: 'sanction-policy',\n        category: 'risk-analysis',\n        label: 'Sanction policy',\n        description: 'Apply appropriate sanctions against workforce members who fail to comply with security policies and procedures.',\n        completed: true,\n        priority: 'medium',\n      },\n      {\n        id: 'review-procedures',\n        category: 'risk-analysis',\n        label: 'Information system activity review',\n        description: 'Implement procedures to regularly review records of information system activity.',\n        completed: false,\n        priority: 'medium',\n      },\n    ],\n  },\n  {\n    id: 'assigned-security',\n    name: 'Assigned Security Responsibility',\n    description: 'Identify the security official responsible for HIPAA Security compliance.',\n    items: [\n      {\n        id: 'security-officer',\n        category: 'assigned-security',\n        label: 'Designate security official',\n        description: 'Identify the security official who is responsible for the development and implementation of the security policies and procedures.',\n        completed: true,\n        priority: 'high',\n      },\n      {\n        id: 'role-documentation',\n        category: 'assigned-security',\n        label: 'Document roles and responsibilities',\n        description: 'Clearly document the security official\\'s roles and responsibilities.',\n        completed: true,\n        priority: 'medium',\n      },\n    ],\n  },\n  {\n    id: 'workforce-security',\n    name: 'Workforce Security',\n    description: 'Ensure that workforce members have appropriate access to ePHI.',\n    items: [\n      {\n        id: 'authorization',\n        category: 'workforce-security',\n        label: 'Authorization procedures',\n        description: 'Implement procedures for the authorization and/or supervision of workforce members who work with ePHI.',\n        completed: false,\n        priority: 'high',\n      },\n      {\n        id: 'workforce-clearance',\n        category: 'workforce-security',\n        label: 'Workforce clearance procedure',\n        description: 'Implement procedures to determine that the access of a workforce member to ePHI is appropriate.',\n        completed: true,\n        priority: 'medium',\n      },\n      {\n        id: 'termination-procedures',\n        category: 'workforce-security',\n        label: 'Termination procedures',\n        description: 'Implement procedures for terminating access to ePHI when employment ends.',\n        completed: false,\n        priority: 'high',\n      },\n    ],\n  },\n];\n\n// Map of category filter to checklist data\nconst checklistData: Record<string, { title: string, description: string, categories: ChecklistCategory[] }> = {\n  'technical': {\n    title: 'Technical Security Safeguards Checklist',\n    description: 'Verify implementation of technical security safeguards for ePHI.',\n    categories: [hipaaChecklistCategories[0]],\n  },\n  'administrative': {\n    title: 'Administrative Safeguards Checklist',\n    description: 'Verify implementation of administrative security safeguards for ePHI.',\n    categories: [hipaaChecklistCategories[1]],\n  },\n  'llm': {\n    title: 'LLM and AI Safeguards Checklist',\n    description: 'Verify implementation of safeguards for using LLMs and AI with PHI.',\n    categories: [hipaaChecklistCategories[3]],\n  },\n  'ccm': {\n    title: 'CCM Specific Requirements Checklist',\n    description: 'Verify implementation of HIPAA safeguards for CCM services.',\n    categories: [hipaaChecklistCategories[4]],\n  },\n  'all': {\n    title: 'All HIPAA Safeguards Checklist',\n    description: 'Comprehensive checklist for all HIPAA security safeguards.',\n    categories: hipaaChecklistCategories,\n  },\n};\n\nexport default function HipaaChecklistsPage() {\n  const searchParams = useSearchParams();\n  const [selectedCategory, setSelectedCategory] = useState('technical');\n  \n  useEffect(() => {\n    // Get the category from the URL query parameters\n    const categoryParam = searchParams.get('category');\n    \n    if (categoryParam) {\n      const lcCategory = categoryParam.toLowerCase();\n      // First try direct matching with category IDs\n      if (Object.keys(checklistData).includes(lcCategory)) {\n        setSelectedCategory(lcCategory);\n      } \n      // Then try term mapping for more flexibility\n      else if (lcCategory.includes('technical') || \n          lcCategory.includes('security rule') ||\n          lcCategory.includes('transmission')) {\n        setSelectedCategory('technical');\n      } else if (lcCategory.includes('admin') ||\n                lcCategory.includes('physical')) {\n        setSelectedCategory('administrative');\n      } else if (lcCategory.includes('llm') ||\n                lcCategory.includes('ai')) {\n        setSelectedCategory('llm');\n      } else if (lcCategory.includes('ccm') ||\n                lcCategory.includes('chronic')) {\n        setSelectedCategory('ccm');\n      }\n    }\n  }, [searchParams]);\n  \n  // Handle saving checklist progress\n  const handleSaveChecklist = (categories: ChecklistCategory[]) => {\n    console.log('Saving checklist:', categories);\n    // In a real app, this would save to a database or localStorage\n    alert('Checklist progress saved!');\n  };\n  \n  // Force re-rendering when category changes to ensure the component is refreshed\n  const [resetKey, setResetKey] = useState(0);\n  useEffectKey(() => {\n    setResetKey(prev => prev + 1);\n  }, [selectedCategory]);\n  \n  return (\n    <WikiLayout>\n      <div>\n        <div className=\"mb-6\">\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n            HIPAA Compliance Checklists\n          </h1>\n          <p className=\"mt-2 text-gray-600 dark:text-gray-300\">\n            Interactive checklists to verify and track HIPAA compliance implementation\n          </p>\n        </div>\n        \n        {/* Category filter buttons */}\n        <div className=\"mb-6\">\n          <div className=\"flex flex-wrap gap-2\">\n            <button\n              onClick={() => setSelectedCategory('technical')}\n              className={`px-4 py-2 rounded-md text-sm font-medium ${\n                selectedCategory === 'technical'\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200 dark:bg-gray-800 dark:text-gray-200 dark:hover:bg-gray-700'\n              }`}\n            >\n              Technical Safeguards\n            </button>\n            <button\n              onClick={() => setSelectedCategory('administrative')}\n              className={`px-4 py-2 rounded-md text-sm font-medium ${\n                selectedCategory === 'administrative'\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200 dark:bg-gray-800 dark:text-gray-200 dark:hover:bg-gray-700'\n              }`}\n            >\n              Administrative Safeguards\n            </button>\n            <button\n              onClick={() => setSelectedCategory('llm')}\n              className={`px-4 py-2 rounded-md text-sm font-medium ${\n                selectedCategory === 'llm'\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200 dark:bg-gray-800 dark:text-gray-200 dark:hover:bg-gray-700'\n              }`}\n            >\n              LLM Safeguards\n            </button>\n            <button\n              onClick={() => setSelectedCategory('ccm')}\n              className={`px-4 py-2 rounded-md text-sm font-medium ${\n                selectedCategory === 'ccm'\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200 dark:bg-gray-800 dark:text-gray-200 dark:hover:bg-gray-700'\n              }`}\n            >\n              CCM Requirements\n            </button>\n            <button\n              onClick={() => setSelectedCategory('all')}\n              className={`px-4 py-2 rounded-md text-sm font-medium ${\n                selectedCategory === 'all'\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200 dark:bg-gray-800 dark:text-gray-200 dark:hover:bg-gray-700'\n              }`}\n            >\n              All Safeguards\n            </button>\n          </div>\n        </div>\n        \n        {/* Render the selected checklist */}\n        <div key={resetKey}>\n          <HipaaChecklistWrapper\n            title={checklistData[selectedCategory].title}\n            description={checklistData[selectedCategory].description}\n            initialCategories={checklistData[selectedCategory].categories}\n            lastUpdated=\"March 13, 2025\"\n            onSave={handleSaveChecklist}\n          />\n        </div>\n      </div>\n    </WikiLayout>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}