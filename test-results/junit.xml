<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="44" failures="0" errors="0" time="0.586">
  <testsuite name="SearchBar Component" errors="0" failures="0" skipped="0" timestamp="2025-03-27T21:48:41" time="0.187" tests="7">
    <testcase classname="SearchBar Component renders search input correctly" name="SearchBar Component renders search input correctly" time="0.011">
    </testcase>
    <testcase classname="SearchBar Component updates query state when typing in the search input" name="SearchBar Component updates query state when typing in the search input" time="0.004">
    </testcase>
    <testcase classname="SearchBar Component shows loading indicator when searching" name="SearchBar Component shows loading indicator when searching" time="0.018">
    </testcase>
    <testcase classname="SearchBar Component displays search results after searching" name="SearchBar Component displays search results after searching" time="0.005">
    </testcase>
    <testcase classname="SearchBar Component filters results correctly based on search query" name="SearchBar Component filters results correctly based on search query" time="0.003">
    </testcase>
    <testcase classname="SearchBar Component shows no results message when no matches found" name="SearchBar Component shows no results message when no matches found" time="0.003">
    </testcase>
    <testcase classname="SearchBar Component closes search results when clicking outside" name="SearchBar Component closes search results when clicking outside" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="ThemeToggle Component" errors="0" failures="0" skipped="0" timestamp="2025-03-27T21:48:41" time="0.061" tests="6">
    <testcase classname="ThemeToggle Component renders the theme toggle button" name="ThemeToggle Component renders the theme toggle button" time="0.011">
    </testcase>
    <testcase classname="ThemeToggle Component uses system preference when no saved theme exists" name="ThemeToggle Component uses system preference when no saved theme exists" time="0">
    </testcase>
    <testcase classname="ThemeToggle Component uses saved theme preference when it exists" name="ThemeToggle Component uses saved theme preference when it exists" time="0">
    </testcase>
    <testcase classname="ThemeToggle Component toggles between light and dark theme when clicked" name="ThemeToggle Component toggles between light and dark theme when clicked" time="0.004">
    </testcase>
    <testcase classname="ThemeToggle Component saves theme preference to localStorage when toggled" name="ThemeToggle Component saves theme preference to localStorage when toggled" time="0.001">
    </testcase>
    <testcase classname="ThemeToggle Component updates theme when toggled" name="ThemeToggle Component updates theme when toggled" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="MDXContent Component" errors="0" failures="0" skipped="0" timestamp="2025-03-27T21:48:41" time="0.045" tests="7">
    <testcase classname="MDXContent Component renders the title and description from frontmatter" name="MDXContent Component renders the title and description from frontmatter" time="0.002">
    </testcase>
    <testcase classname="MDXContent Component handles null content by showing error message" name="MDXContent Component handles null content by showing error message" time="0">
    </testcase>
    <testcase classname="MDXContent Component handles content without MDX by showing error message" name="MDXContent Component handles content without MDX by showing error message" time="0.001">
    </testcase>
    <testcase classname="MDXContent Component safely renders tags as an array" name="MDXContent Component safely renders tags as an array" time="0.001">
    </testcase>
    <testcase classname="MDXContent Component safely renders tags as a comma-separated string" name="MDXContent Component safely renders tags as a comma-separated string" time="0">
    </testcase>
    <testcase classname="MDXContent Component handles Date objects in lastUpdated field" name="MDXContent Component handles Date objects in lastUpdated field" time="0.001">
    </testcase>
    <testcase classname="MDXContent Component renders category if present" name="MDXContent Component renders category if present" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Breadcrumb Component" errors="0" failures="0" skipped="0" timestamp="2025-03-27T21:48:42" time="0.045" tests="7">
    <testcase classname="Breadcrumb Component renders nothing on the homepage" name="Breadcrumb Component renders nothing on the homepage" time="0.001">
    </testcase>
    <testcase classname="Breadcrumb Component renders breadcrumbs for a simple path" name="Breadcrumb Component renders breadcrumbs for a simple path" time="0.002">
    </testcase>
    <testcase classname="Breadcrumb Component renders breadcrumbs for a complex path" name="Breadcrumb Component renders breadcrumbs for a complex path" time="0.001">
    </testcase>
    <testcase classname="Breadcrumb Component formats multi-word path segments correctly" name="Breadcrumb Component formats multi-word path segments correctly" time="0.001">
    </testcase>
    <testcase classname="Breadcrumb Component includes home icon for the home link" name="Breadcrumb Component includes home icon for the home link" time="0">
    </testcase>
    <testcase classname="Breadcrumb Component includes separator icons between items" name="Breadcrumb Component includes separator icons between items" time="0.001">
    </testcase>
    <testcase classname="Breadcrumb Component marks the current page as aria-current" name="Breadcrumb Component marks the current page as aria-current" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Wiki Page Integration" errors="0" failures="0" skipped="0" timestamp="2025-03-27T21:48:42" time="0.043" tests="2">
    <testcase classname="Wiki Page Integration renders the complete wiki page with sidebar, breadcrumb, and content" name="Wiki Page Integration renders the complete wiki page with sidebar, breadcrumb, and content" time="0.002">
    </testcase>
    <testcase classname="Wiki Page Integration displays the error UI when content is not found" name="Wiki Page Integration displays the error UI when content is not found" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="MDX Content Utilities" errors="0" failures="0" skipped="0" timestamp="2025-03-27T21:48:42" time="0.025" tests="6">
    <testcase classname="MDX Content Utilities getAllContentFilePaths returns markdown files from the content directory" name="MDX Content Utilities getAllContentFilePaths returns markdown files from the content directory" time="0">
    </testcase>
    <testcase classname="MDX Content Utilities getAllContentFilePaths handles errors gracefully" name="MDX Content Utilities getAllContentFilePaths handles errors gracefully" time="0">
    </testcase>
    <testcase classname="MDX Content Utilities getMDXContent parses MDX content correctly" name="MDX Content Utilities getMDXContent parses MDX content correctly" time="0">
    </testcase>
    <testcase classname="MDX Content Utilities getMDXContent handles MDX compilation errors" name="MDX Content Utilities getMDXContent handles MDX compilation errors" time="0.001">
    </testcase>
    <testcase classname="MDX Content Utilities getContentBySlug finds content by slug" name="MDX Content Utilities getContentBySlug finds content by slug" time="0">
    </testcase>
    <testcase classname="MDX Content Utilities getContentBySlug returns null when no content is found" name="MDX Content Utilities getContentBySlug returns null when no content is found" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Markdown Utilities" errors="0" failures="0" skipped="0" timestamp="2025-03-27T21:48:42" time="0.027" tests="9">
    <testcase classname="Markdown Utilities markdownToHtml converts markdown to HTML correctly" name="Markdown Utilities markdownToHtml converts markdown to HTML correctly" time="0">
    </testcase>
    <testcase classname="Markdown Utilities markdownToHtml handles parsing errors gracefully" name="Markdown Utilities markdownToHtml handles parsing errors gracefully" time="0">
    </testcase>
    <testcase classname="Markdown Utilities extractTitleFromMarkdown extracts title from a markdown header" name="Markdown Utilities extractTitleFromMarkdown extracts title from a markdown header" time="0">
    </testcase>
    <testcase classname="Markdown Utilities extractTitleFromMarkdown returns default title when no header is found" name="Markdown Utilities extractTitleFromMarkdown returns default title when no header is found" time="0">
    </testcase>
    <testcase classname="Markdown Utilities extractTitleFromMarkdown ignores lower level headers when extracting title" name="Markdown Utilities extractTitleFromMarkdown ignores lower level headers when extracting title" time="0">
    </testcase>
    <testcase classname="Markdown Utilities extractFrontmatter extracts frontmatter and content correctly" name="Markdown Utilities extractFrontmatter extracts frontmatter and content correctly" time="0">
    </testcase>
    <testcase classname="Markdown Utilities extractFrontmatter returns empty frontmatter when none is present" name="Markdown Utilities extractFrontmatter returns empty frontmatter when none is present" time="0.001">
    </testcase>
    <testcase classname="Markdown Utilities extractFrontmatter handles array values in frontmatter" name="Markdown Utilities extractFrontmatter handles array values in frontmatter" time="0.001">
    </testcase>
    <testcase classname="Markdown Utilities extractFrontmatter handles malformed frontmatter gracefully" name="Markdown Utilities extractFrontmatter handles malformed frontmatter gracefully" time="0">
    </testcase>
  </testsuite>
</testsuites>